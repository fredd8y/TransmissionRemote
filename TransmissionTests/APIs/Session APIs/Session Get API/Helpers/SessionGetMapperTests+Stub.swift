//
//  SessionGetMapperTests+Stub.swift
//  TransmissionTests
//
//  Created by Federico Arvat on 15/05/23.
//

import Foundation
import Transmission

extension SessionGetMapperTest {
	func makeSessionItem(
		altSpeedDown: Int,
		altSpeedEnabled: Bool,
		altSpeedTimeBegin: Int,
		altSpeedTimeDay: Int,
		altSpeedTimeEnabled: Bool,
		altSpeedTimeEnd: Int,
		altSpeedUp: Int,
		blocklistEnabled: Bool,
		blockListSize: Int,
		blocklistUrl: String,
		cacheSizeMb: Int,
		configDir: String,
		dhtEnabled: Bool,
		downloadDir: String,
		downloadDirFreeSpace: Int,
		downloadQueueEnabled: Bool,
		downloadQueueSize: Int,
		encryption: String,
		idleSeedingLimit: Int,
		idleSeedingLimitEnabled: Bool,
		incompleteDir: String,
		incompleteDirEnabled: Bool,
		lpdEnabled: Bool,
		peerLimitGlobal: Int,
		peerLimitPerTorrent: Int,
		peerPort: Int,
		peerPortRandomOnStart: Bool,
		pexEnabled: Bool,
		portForwardingEnabled: Bool,
		queueStalledEnabled: Bool,
		queueStalledMinutes: Int,
		renamePartialFiles: Bool,
		rpcVersion: Int,
		rpcVersionMinimum: Int,
		scriptTorrentDoneEnabled: Bool,
		scriptTorrentDoneFilename: String,
		seedQueueEnabled: Bool,
		seedQueueSize: Int,
		seedRatioLimit: Int,
		seedRatioLimited: Bool,
		sessionId: String,
		speedLimitDown: Int,
		speedLimitDownEnabled: Bool,
		speedLimitUp: Int,
		speedLimitUpEnabled: Bool,
		startAddedTorrents: Bool,
		trashOriginalTorrentFiles: Bool,
		memoryBytes: Int,
		memoryUnits: [String],
		sizeBytes: Int,
		sizeUnits: [String],
		speedBytes: Int,
		speedUnits: [String],
		utpEnabled: Bool,
		version: String,
		result: String
	) -> (model: Session, json: [String: Any]) {
		
		let sessionItem = Session(
			altSpeedDown: altSpeedDown,
			altSpeedEnabled: altSpeedEnabled,
			altSpeedTimeBegin: altSpeedTimeBegin,
			altSpeedTimeDay: altSpeedTimeDay,
			altSpeedTimeEnabled: altSpeedTimeEnabled,
			altSpeedTimeEnd: altSpeedTimeEnd,
			altSpeedUp: altSpeedUp,
			blocklistEnabled: blocklistEnabled,
			blockListSize: blockListSize,
			blocklistUrl: blocklistUrl,
			cacheSizeMb: cacheSizeMb,
			configDir: configDir,
			dhtEnabled: dhtEnabled,
			downloadDir: downloadDir,
			downloadDirFreeSpace: downloadDirFreeSpace,
			downloadQueueEnabled: downloadQueueEnabled,
			downloadQueueSize: downloadQueueSize,
			encryption: encryption,
			idleSeedingLimit: idleSeedingLimit,
			idleSeedingLimitEnabled: idleSeedingLimitEnabled,
			incompleteDir: incompleteDir,
			incompleteDirEnabled: incompleteDirEnabled,
			lpdEnabled: lpdEnabled,
			peerLimitGlobal: peerLimitGlobal,
			peerLimitPerTorrent: peerLimitPerTorrent,
			peerPort: peerPort,
			peerPortRandomOnStart: peerPortRandomOnStart,
			pexEnabled: pexEnabled,
			portForwardingEnabled: portForwardingEnabled,
			queueStalledEnabled: queueStalledEnabled,
			queueStalledMinutes: queueStalledMinutes,
			renamePartialFiles: renamePartialFiles,
			rpcVersion: rpcVersion,
			rpcVersionMinimum: rpcVersionMinimum,
			scriptTorrentDoneEnabled: scriptTorrentDoneEnabled,
			scriptTorrentDoneFilename: scriptTorrentDoneFilename,
			seedQueueEnabled: seedQueueEnabled,
			seedQueueSize: seedQueueSize,
			seedRatioLimit: seedRatioLimit,
			seedRatioLimited: seedRatioLimited,
			sessionId: sessionId,
			speedLimitDown: speedLimitDown,
			speedLimitDownEnabled: speedLimitDownEnabled,
			speedLimitUp: speedLimitUp,
			speedLimitUpEnabled: speedLimitUpEnabled,
			startAddedTorrents: startAddedTorrents,
			trashOriginalTorrentFiles: trashOriginalTorrentFiles,
			units: Units(
				memoryBytes: memoryBytes,
				memoryUnits: memoryUnits,
				sizeBytes: sizeBytes,
				sizeUnits: sizeUnits,
				speedBytes: speedBytes,
				speedUnits: speedUnits
			),
			utpEnabled: utpEnabled,
			version: version
		)
		
		return (model: sessionItem, json: [
			"arguments": [
				"alt-speed-down": altSpeedDown,
				"alt-speed-enabled": altSpeedEnabled,
				"alt-speed-time-begin": altSpeedTimeBegin,
				"alt-speed-time-day": altSpeedTimeDay,
				"alt-speed-time-enabled": altSpeedTimeEnabled,
				"alt-speed-time-end": altSpeedTimeEnd,
				"alt-speed-up": altSpeedUp,
				"blocklist-enabled": blocklistEnabled,
				"blocklist-size": blockListSize,
				"blocklist-url": blocklistUrl,
				"cache-size-mb": cacheSizeMb,
				"config-dir": configDir,
				"dht-enabled": dhtEnabled,
				"download-dir": downloadDir,
				"download-dir-free-space": downloadDirFreeSpace,
				"download-queue-enabled": downloadQueueEnabled,
				"download-queue-size": downloadQueueSize,
				"encryption": encryption,
				"idle-seeding-limit": idleSeedingLimit,
				"idle-seeding-limit-enabled": idleSeedingLimitEnabled,
				"incomplete-dir": incompleteDir,
				"incomplete-dir-enabled": incompleteDirEnabled,
				"lpd-enabled": lpdEnabled,
				"peer-limit-global": peerLimitGlobal,
				"peer-limit-per-torrent": peerLimitPerTorrent,
				"peer-port": peerPort,
				"peer-port-random-on-start": peerPortRandomOnStart,
				"pex-enabled": pexEnabled,
				"port-forwarding-enabled": portForwardingEnabled,
				"queue-stalled-enabled": queueStalledEnabled,
				"queue-stalled-minutes": queueStalledMinutes,
				"rename-partial-files": renamePartialFiles,
				"rpc-version": rpcVersion,
				"rpc-version-minimum": rpcVersionMinimum,
				"script-torrent-done-enabled": scriptTorrentDoneEnabled,
				"script-torrent-done-filename": scriptTorrentDoneFilename,
				"seed-queue-enabled": seedQueueEnabled,
				"seed-queue-size": seedQueueSize,
				"seedRatioLimit": seedRatioLimit,
				"seedRatioLimited": seedRatioLimited,
				"session-id": sessionId,
				"speed-limit-down": speedLimitDown,
				"speed-limit-down-enabled": speedLimitDownEnabled,
				"speed-limit-up": speedLimitUp,
				"speed-limit-up-enabled": speedLimitUpEnabled,
				"start-added-torrents": startAddedTorrents,
				"trash-original-torrent-files": trashOriginalTorrentFiles,
				"units": [
					"memory-bytes": memoryBytes,
					"memory-units": memoryUnits,
					"size-bytes": sizeBytes,
					"size-units": sizeUnits,
					"speed-bytes": speedBytes,
					"speed-units": speedUnits
				],
				"utp-enabled": utpEnabled,
				"version": version
			],
			"result": result
		])
	}
}
